###########################################################################################
# THIS DEMO SUCCESSFULLY BUILDS AND DEPLOYS THE DOCKER CONTAINER TO AKS
#THE APP IS TAKEN FROM docs.docker.com/get-started/02_our_app
#THE ZIP FOLDER IS IN MY DOWNLOADS C:\Users\ericn\Downloads\getting-started-master.zip
#########################################################################################
#
#This workflow is triggered on a push to github branch che
name: demo_build_and_deploy_ECR_v2

on:
  push:
    branches: [ cheECR ]
    paths-ignore:
      - demo-build-deploy-v1.yml
      - demo-build-deploy-v2.yml
      - demo-build-deploy-v3.yml
      - demo-build-deploy.yml 


jobs:

  build-deploy-to-ECR:
    runs-on: ubuntu-latest
    env:
      #Environment variables for Docker image
      DOCKER_REPOSITORY: eche21 # name of Docker Hub ID
      IMAGE_NAME: demoappv4 # name of image
      IMAGE_TAG: ${{ github.sha }} # $GITHUB_SHA the  commit ID
      #

    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2

    - name: Build Docker Image
      run:
          docker build ./app/ --file ./app/Dockerfile --tag  $DOCKER_REPOSITORY/${{ env.IMAGE_NAME }}:${{ github.ref_name }} --build-arg=token=secrets.MYTOKEN --no-cache
    - name: Login to Docker Hub
      run: |
         docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Push to Docker Hub
         docker push $DOCKER_REPOSITORY/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:

        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
      # run: |
      #   docker build ./app/ --file ./app/Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$GITHUB_SHA --build-arg=token=secrets.MYTOKEN --no-cache 
      #   docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: working Directory
      run: pwd  
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: demorepo
        IMAGE_TAG: ${{ github.sha }}
#        IMAGE_NAME: demoappv4
      run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker tag $DOCKER_REPOSITORY/${{ env.IMAGE_NAME }}:${{ github.ref_name }} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#tags: ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
#        docker build ./app/ --file ./app/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_SHA --build-arg=token=secrets.MYTOKEN --no-cache
#        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin